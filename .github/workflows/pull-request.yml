name: Pull Request Quality Gate

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]

env:
  NODE_VERSION: '18'

jobs:
  # Quality Gate - All checks must pass
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for analysis
        
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Cache npm packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node
        
    # Install Dependencies
    - name: Install Dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        
    # Linting and Code Quality
    - name: Linting and Code Quality
      run: |
        echo "🎨 Running linting and code quality checks..."
        npm run lint
        
    # Type Checking
    - name: Type Checking
      run: |
        echo "🔍 Running TypeScript type checking..."
        npx tsc --noEmit
        
    # Build Test
    - name: Build Test
      run: |
        echo "🏗️ Testing build process..."
        npm run build
        
    # Security Audit
    - name: Security Audit
      run: |
        echo "🔒 Running security audit..."
        npm audit --audit-level=moderate || {
          echo "⚠️ Security vulnerabilities found. Please review and fix them."
          exit 1
        }
        
    # Bundle Analysis
    - name: Bundle Analysis
      run: |
        echo "📊 Analyzing bundle size..."
        npm run build
        echo "Bundle size analysis completed"
        
    # Upload Test Results
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          dist/
        retention-days: 30
        
    # Upload Build Artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts-${{ github.run_number }}
        path: |
          dist/
        retention-days: 30
        
    # Comment PR with Results
    - name: Comment PR Results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          
          let comment = `## 🔍 Quality Gate Results
          
          ### ✅ Checks Completed
          - Code Linting (ESLint)
          - TypeScript Type Checking
          - Build Process Test
          - Security Vulnerability Scan
          - Bundle Size Analysis
          - Dependency Audit
          - Code Quality Checks
          
          ### 📊 Build Summary
          - Build Status: ${process.env.BUILD_STATUS || 'Unknown'}
          - Bundle Size: Generated in dist/ directory
          - TypeScript: All types checked
          - Linting: ESLint rules applied
          
          ### 📈 Next Steps
          - Review any linting warnings
          - Address security vulnerabilities if found
          - Optimize bundle size if needed
          - Ensure all TypeScript types are correct
          
          ---
          *This comment was automatically generated by the Quality Gate workflow.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 